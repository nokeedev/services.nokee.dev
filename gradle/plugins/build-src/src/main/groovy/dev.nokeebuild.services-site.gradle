import dev.nokee.services.tasks.GenerateAllVersionJson
import dev.nokee.services.tasks.GenerateCurrentVersionJson
import dev.nokee.services.tasks.GenerateLatestSnapshotVersionJson

plugins {
    id 'dev.gradleplugins.documentation.github-pages-site'
    id 'dev.gradleplugins.documentation.jbake-render'
}

def allVersionTask = tasks.register('generateAllVersionJson', GenerateAllVersionJson) { task ->
    task.getOutputFile().set(layout.buildDirectory.file('all.json'))
}

def currentVersionTask = tasks.register('generateCurrentVersionJson', GenerateCurrentVersionJson) { task ->
    task.getAllVersionsFile().set(allVersionTask.flatMap { it.outputFile })
    task.getOutputFile().set(layout.buildDirectory.file('current.json'))
}

def latestSnapshotVersionTask = tasks.register('generateLatestSnapshotVersionJson', GenerateLatestSnapshotVersionJson) { task ->
    task.getAllVersionsFile().set(allVersionTask.flatMap { it.outputFile })
    task.getOutputFile().set(layout.buildDirectory.file('latest-snapshot.json'))
}

def versionsTask = tasks.register("versions", Sync) { task ->
    task.into('versions') {
        from(allVersionTask.flatMap { it.outputFile })
        from(currentVersionTask.flatMap { it.outputFile })
        from(latestSnapshotVersionTask.flatMap { it.outputFile })
    }
    task.destinationDir = layout.buildDirectory.dir("tmp/${task.name}").get().asFile
}

site {
    sources.from(jbake.destinationDirectory)
    sources.from(versionsTask.map { it.destinationDir })
}
