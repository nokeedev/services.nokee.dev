buildscript {
    dependencies {
        classpath 'dev.nokee.docs:build-src:latest.integration'
        classpath 'dev.nokee.docs:site:latest.integration'
    }
    repositories {
        jcenter()
        maven { url = 'https://dl.bintray.com/nokeedev/documentations' }
        maven { url = 'https://dl.bintray.com/nokeedev/distributions-snapshots' }
    }
}

plugins {
    id 'dev.nokee.documentation.github-pages-publish' version '0.2.5'
}

group = 'dev.nokee'

import dev.nokee.services.tasks.GenerateAllVersionJson
import dev.nokee.services.tasks.GenerateCurrentVersionJson
import dev.nokee.services.tasks.GenerateLatestSnapshotVersionJson
import dev.nokee.docs.publish.bintray.credentials.DefaultBintrayCredentials
import dev.nokee.docs.publish.githubpages.tasks.PublishToGitHubPages
import dev.nokee.docs.site.tasks.GenerateGitHubPagesCustomDomainCanonicalNameRecord
import dev.nokee.docs.site.tasks.GenerateGitHubPagesNoJekyll

def allVersionTask = tasks.register('generateAllVersionJson', GenerateAllVersionJson) { task ->
    task.getOutputFile().set(layout.buildDirectory.file('all.json'))
    task.getCredentials().set(DefaultBintrayCredentials.from(project))
}

def currentVersionTask = tasks.register('generateCurrentVersionJson', GenerateCurrentVersionJson) { task ->
    task.getOutputFile().set(layout.buildDirectory.file('current.json'))
    task.getCredentials().set(DefaultBintrayCredentials.from(project))
}

def latestSnapshotVersionTask = tasks.register('generateLatestSnapshotVersionJson', GenerateLatestSnapshotVersionJson) { task ->
    task.getOutputFile().set(layout.buildDirectory.file('latest-snapshot.json'))
    task.getCredentials().set(DefaultBintrayCredentials.from(project))
}

def customDomainTask = tasks.register('generateCustomDomainAlias', GenerateGitHubPagesCustomDomainCanonicalNameRecord) { task ->
    task.getOutputFile().set(layout.buildDirectory.file('CNAME'))
    task.getCustomDomain().set(task.subdomain('services.nokee.dev'))
}

def noJekyllTask = tasks.register('generateNoJekyll', GenerateGitHubPagesNoJekyll)

def siteTask = tasks.register('site', Sync) { task ->
    task.into('versions') {
        from(allVersionTask.flatMap { it.outputFile })
        from(currentVersionTask.flatMap { it.outputFile })
        from(latestSnapshotVersionTask.flatMap { it.outputFile })
    }
    task.from(noJekyllTask.flatMap { it.outputFile })
    task.from(customDomainTask.flatMap { it.outputFile })
    task.destinationDir = layout.buildDirectory.dir('site').get().asFile
}

tasks.named('publishToGitHubPages', PublishToGitHubPages) { task ->
    task.publishDirectory.fileProvider(siteTask.map { it.destinationDir })
    task.uri = uri('https://github.com/nokeedev/services.nokee.dev.git') // TODO: Should auto-detect to current repo
}